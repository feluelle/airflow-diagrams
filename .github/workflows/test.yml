name: test

on: push

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ['3.9', '3.10']
        include:
          - python: '3.11'
            experimental: true
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Setup python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install library
        run: poetry install --no-interaction
      - name: Run tests
        run: poetry run pytest --cov-report=xml --cov=airflow_diagrams tests/
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          verbose: true
      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v1
      - name: Render generated diagrams
        run: poetry run python generated/test_dag_diagrams.py
